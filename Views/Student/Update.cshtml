@model Student
@{
    Layout = "~/Views/Shared/MyLayout.cshtml";
    ViewData["Title"] = "Update Student";
}

<div class="row justify-content-center">
    <div class="col-md-8 col-lg-6">
        <div class="card shadow-sm">
            <div class="card-header bg-warning text-dark">
                <h2 class="mb-0">
                    <i class="fas fa-user-edit me-2"></i>Update Student
                </h2>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("Update", "Student", FormMethod.Post, new { @class = "needs-validation", enctype = "multipart/form-data", novalidate = "novalidate" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(s => s.Id)
                    @Html.ValidationSummary(true, null, new { @class = "alert alert-danger" })
                    
                    <!-- Image Upload Section -->
                    <div class="mb-3">
                        <label class="form-label fw-bold">Profile Picture</label>
                        <div class="text-center mb-3">
                            @{
                                var currentImage = !string.IsNullOrEmpty(Model.Image) ? "/Images/" + Model.Image : "/Images/default.png";
                            }
                            <img id="imagePreview" src="@currentImage" alt="Preview" 
                                 class="rounded-circle" style="width: 120px; height: 120px; object-fit: cover; border: 3px solid #dee2e6;">
                        </div>
                        <input type="file" name="imageFile" id="imageFile" class="form-control" 
                               accept=".jpg,.jpeg,.png,.gif" onchange="previewImage(this)">
                        <small class="text-muted">Leave empty to keep current image. Accepted formats: JPG, PNG, GIF (Max 5MB)</small>
                    </div>
                    
                    <div class="mb-3">
                        @Html.LabelFor(s => s.Name, new { @class = "form-label fw-bold" })
                        @Html.EditorFor(s => s.Name, new { 
                            htmlAttributes = new { 
                                @class = "form-control", 
                                placeholder = "Enter student name",
                                required = "required"
                            } 
                        })
                        @Html.ValidationMessageFor(s => s.Name, null, new { @class = "invalid-feedback d-block" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(s => s.Age, new { @class = "form-label fw-bold" })
                        @Html.EditorFor(s => s.Age, new { 
                            htmlAttributes = new { 
                                @class = "form-control", 
                                placeholder = "Enter age (10-75)",
                                min = "10",
                                max = "75",
                                required = "required"
                            } 
                        })
                        @Html.ValidationMessageFor(s => s.Age, null, new { @class = "invalid-feedback d-block" })
                    </div>

                    <div class="mb-3">
                        @Html.LabelFor(s => s.Level, new { @class = "form-label fw-bold" })
                        @Html.EditorFor(s => s.Level, new { 
                            htmlAttributes = new { 
                                @class = "form-control", 
                                placeholder = "Enter level (1-5)",
                                min = "1",
                                max = "5",
                                required = "required"
                            } 
                        })
                        @Html.ValidationMessageFor(s => s.Level, null, new { @class = "invalid-feedback d-block" })
                    </div>

                    <div class="mb-4">
                        @Html.LabelFor(s => s.Course, new { @class = "form-label fw-bold" })
                        @Html.DropDownList("CourseId", ViewData["Course"] as SelectList, "-- Select Course --", new { @class = "form-select", required = "required" })
                        @Html.ValidationMessageFor(s => s.Course, null, new { @class = "invalid-feedback d-block" })
                    </div>

                    <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                        <a href="@Url.Action("Details", "Student", new { id = Model.Id })" class="btn btn-outline-secondary me-md-2">
                            <i class="fas fa-arrow-left me-1"></i>Cancel
                        </a>
                        <button type="submit" class="btn btn-warning" id="submitBtn">
                            <span class="spinner-border spinner-border-sm me-2 d-none" role="status"></span>
                            <i class="fas fa-save me-1"></i>Update Student
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/dist/jquery.validate.unobtrusive.min.js"></script>
    <script>
        function previewImage(input) {
            if (input.files && input.files[0]) {
                const file = input.files[0];
                
                // Check file size (5MB = 5 * 1024 * 1024 bytes)
                if (file.size > 5 * 1024 * 1024) {
                    alert('File size must be less than 5MB');
                    input.value = '';
                    return;
                }
                
                const reader = new FileReader();
                reader.onload = function(e) {
                    document.getElementById('imagePreview').src = e.target.result;
                }
                reader.readAsDataURL(file);
            }
        }
        
        $(document).ready(function() {
            $('form').on('submit', function() {
                var submitBtn = $('#submitBtn');
                if ($(this).valid()) {
                    submitBtn.prop('disabled', true);
                    submitBtn.find('.spinner-border').removeClass('d-none');
                    submitBtn.find('.fas').addClass('d-none');
                    submitBtn.html('<span class="spinner-border spinner-border-sm me-2" role="status"></span>Updating Student...');
                }
            });
            $('#Name').focus();
        });
    </script>
}