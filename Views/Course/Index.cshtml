@model IEnumerable<Course>
@{
	Layout = "~/Views/Shared/MyLayout.cshtml";
	ViewData["Title"] = "Course Management";
}

@section Styles {
	<style>
		.course-card {
			border: none;
			border-radius: 15px;
			overflow: hidden;
			transition: all 0.3s ease;
			background: white;
			box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
		}

			.course-card:hover {
				transform: translateY(-8px);
				box-shadow: 0 12px 25px rgba(0, 0, 0, 0.15);
			}

		.course-header {
			background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
			color: white;
			padding: 1.5rem;
			position: relative;
			overflow: hidden;
		}

			.course-header::before {
				content: '';
				position: absolute;
				top: 0;
				right: 0;
				width: 100px;
				height: 100px;
				background: rgba(255, 255, 255, 0.1);
				border-radius: 50%;
				transform: translate(30%, -30%);
			}

		.course-stats {
			background: rgba(255, 255, 255, 0.1);
			padding: 0.75rem 1rem;
			border-radius: 10px;
			margin-top: 1rem;
		}

		.enrollment-progress {
			background: rgba(255, 255, 255, 0.2);
			height: 6px;
			border-radius: 3px;
			overflow: hidden;
		}

		.enrollment-fill {
			background: #28a745;
			height: 100%;
			transition: width 1s ease;
		}

		.course-icon {
			width: 60px;
			height: 60px;
			background: rgba(255, 255, 255, 0.2);
			border-radius: 50%;
			display: flex;
			align-items: center;
			justify-content-center;
			font-size: 1.5rem;
			margin-bottom: 1rem;
		}
	</style>
}

<!-- Page Header -->
<div class="page-header fade-in">
	<div class="container">
		<div class="row align-items-center">
			<div class="col-lg-6">
				<h1 class="page-title">
					<i class="fas fa-book me-3"></i>
					Course Management
				</h1>
				<p class="lead mb-0">Organize and manage your academic programs</p>
			</div>
			<div class="col-lg-6 text-lg-end">
				<a href="@Url.Action("Add", "Course")" class="btn btn-success btn-lg hover-lift">
					<i class="fas fa-plus me-2"></i>Create New Course
				</a>
			</div>
		</div>
	</div>
</div>

<div class="container">
	@if (TempData["SuccessMessage"] != null)
	{
		<div class="alert alert-success alert-dismissible fade show slide-in-right" role="alert">
			<i class="fas fa-check-circle me-2"></i>
			<strong>Success!</strong> @TempData["SuccessMessage"]
			<button type="button" class="btn-close" data-bs-dismiss="alert"></button>
		</div>
	}

	@if (TempData["ErrorMessage"] != null)
	{
		<div class="alert alert-danger alert-dismissible fade show slide-in-right" role="alert">
			<i class="fas fa-exclamation-circle me-2"></i>
			<strong>Error!</strong> @TempData["ErrorMessage"]
			<button type="button" class="btn-close" data-bs-dismiss="alert"></button>
		</div>
	}

	@if (!Model.Any())
	{
		<div class="card text-center py-5 fade-in">
			<div class="card-body">
				<i class="fas fa-book-open fa-4x text-muted mb-3"></i>
				<h3 class="text-muted">No Courses Available</h3>
				<p class="text-muted lead">Start building your curriculum by creating your first course.</p>
				<a href="@Url.Action("Add", "Course")" class="btn btn-success btn-lg">
					<i class="fas fa-plus me-2"></i>Create Your First Course
				</a>
			</div>
		</div>
	}
	else
	{
		<!-- Course Statistics -->
		<div class="row mb-4">
			<div class="col-md-4">
				<div class="card bg-primary text-white">
					<div class="card-body text-center">
						<i class="fas fa-book fa-3x mb-2"></i>
						<h3>@Model.Count()</h3>
						<p class="mb-0">Total Courses</p>
					</div>
				</div>
			</div>
			<div class="col-md-4">
				<div class="card bg-success text-white">
					<div class="card-body text-center">
						<i class="fas fa-users fa-3x mb-2"></i>
						<h3>@ViewBag.Enrollments</h3>
						<p class="mb-0">Total Enrollments</p>
					</div>
				</div>
			</div>
			<div class="col-md-4">
				<div class="card bg-info text-white">
					<div class="card-body text-center">
						<i class="fas fa-credit-card fa-3x mb-2"></i>
						<h3>@Model.Sum(c => c.Credits)</h3>
						<p class="mb-0">Total Credits</p>
					</div>
				</div>
			</div>
		</div>

		<!-- Course Grid -->
		<div class="row">
			@foreach (var course in Model)
			{
				<div class="col-lg-4 col-md-6 mb-4">
					<div class="card course-card slide-in-left">
						<div class="course-header">
							<div class="d-flex align-items-start">
								<div class="course-icon">
									<i class="fas fa-graduation-cap"></i>
								</div>
								<div class="flex-grow-1">
									<h5 class="card-title mb-2">@course.Name</h5>
									<div class="d-flex justify-content-between text-white-50">
										<span>
											<i class="fas fa-credit-card me-1"></i>
											@course.Credits Credit@(course.Credits > 1 ? "s" : "")
										</span>
										<span>
											<i class="fas fa-hashtag me-1"></i>
											ID: @course.Id
										</span>
									</div>
								</div>
							</div>

							<div class="course-stats">
								<div class="d-flex justify-content-between align-items-center mb-2">
									<span class="small">Enrollment</span>
									<span class="fw-bold">@ViewData[course.Id.ToString()] students</span>
								</div>
								<div class="enrollment-progress">
									<div class="enrollment-fill" style="width: @(Math.Min(course.Students.Count * 10, 100))%"></div>
								</div>
							</div>
						</div>

						<div class="card-body">
							<div class="row text-center mb-3">
								<div class="col-6">
									<div class="border-end">
										<h6 class="text-primary mb-0">@ViewData[course.Id.ToString()] </h6>
										<small class="text-muted">Enrolled</small>
									</div>
								</div>
								<div class="col-6">
									<h6 class="text-success mb-0">@course.Credits</h6>
									<small class="text-muted">Credits</small>
								</div>
							</div>

							@if (course.Students.Any())
							{
								<div class="mb-3">
									<h6 class="text-muted mb-2">Recent Students:</h6>
									<div class="d-flex">
										@foreach (var student in course.Students.Take(4))
										{
											@if (!string.IsNullOrEmpty(student.Image) && student.Image != "default.png")
											{
												<img src="~/Images/@student.Image" class="rounded-circle me-1"
													 style="width: 30px; height: 30px; object-fit: cover;"
													 title="@student.Name" alt="@student.Name">
											}
											else
											{
												<div class="rounded-circle bg-primary d-flex align-items-center justify-content-center me-1 text-white"
													 style="width: 30px; height: 30px; font-size: 0.8rem;" title="@student.Name">
													@student.Name.FirstOrDefault()
												</div>
											}
										}
										@if (course.Students.Count > 4)
										{
											<div class="rounded-circle bg-secondary d-flex align-items-center justify-content-center text-white"
												 style="width: 30px; height: 30px; font-size: 0.7rem;">
												+@(course.Students.Count - 4)
											</div>
										}
									</div>
								</div>
							}

							<div class="d-grid gap-2">
								<div class="btn-group" role="group">
									<a href="@Url.Action("Details", "Course", new { id = course.Id })"
									   class="btn btn-outline-info">
										<i class="fas fa-eye me-1"></i>Details
									</a>
									<a href="@Url.Action("Edit", "Course", new { id = course.Id })"
									   class="btn btn-outline-warning">
										<i class="fas fa-edit me-1"></i>Edit
									</a>
									<button type="button" class="btn btn-outline-danger"
											onclick="confirmDelete(@course.Id, '@course.Name', @course.Students.Count)">
										<i class="fas fa-trash me-1"></i>Delete
									</button>
								</div>
							</div>
						</div>
					</div>
				</div>
			}
		</div>
	}
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
	<div class="modal-dialog modal-dialog-centered">
		<div class="modal-content">
			<div class="modal-header bg-danger text-white">
				<h5 class="modal-title">
					<i class="fas fa-exclamation-triangle me-2"></i>Confirm Course Deletion
				</h5>
				<button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
			</div>
			<div class="modal-body text-center py-4">
				<i class="fas fa-book-dead fa-4x text-danger mb-3"></i>
				<h5>Are you sure you want to delete this course?</h5>
				<p class="text-muted mb-3">
					<strong id="courseName"></strong>
				</p>
				<div id="studentWarning" class="alert alert-warning d-none">
					<i class="fas fa-exclamation-triangle me-2"></i>
					This course has <span id="studentCount"></span> enrolled student(s).
					You cannot delete it until all students are transferred to other courses.
				</div>
				<div id="confirmationText" class="alert alert-info">
					<i class="fas fa-info-circle me-2"></i>
					<small>This action cannot be undone. All course data will be permanently removed.</small>
				</div>
			</div>
			<div class="modal-footer justify-content-center">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
					<i class="fas fa-times me-1"></i>Cancel
				</button>
				<form id="deleteForm" method="post" style="display: inline;">
					@Html.AntiForgeryToken()
					<button type="submit" class="btn btn-danger" id="confirmDelete">
						<i class="fas fa-trash me-1"></i>Delete Course
					</button>
				</form>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<script>
		function confirmDelete(courseId, courseName, studentCount) {
			document.getElementById('courseName').textContent = courseName;
			document.getElementById('deleteForm').action = '@Url.Action("Delete", "Course")/' + courseId;

			if (studentCount > 0) {
				document.getElementById('studentCount').textContent = studentCount;
				document.getElementById('studentWarning').classList.remove('d-none');
				document.getElementById('confirmDelete').disabled = true;
				document.getElementById('confirmDelete').innerHTML = '<i class="fas fa-ban me-1"></i>Cannot Delete';
				document.getElementById('confirmDelete').classList.remove('btn-danger');
				document.getElementById('confirmDelete').classList.add('btn-secondary');
			} else {
				document.getElementById('studentWarning').classList.add('d-none');
				document.getElementById('confirmDelete').disabled = false;
				document.getElementById('confirmDelete').innerHTML = '<i class="fas fa-trash me-1"></i>Delete Course';
				document.getElementById('confirmDelete').classList.remove('btn-secondary');
				document.getElementById('confirmDelete').classList.add('btn-danger');
			}

			new bootstrap.Modal(document.getElementById('deleteModal')).show();
		}

		// Animation on scroll
		document.addEventListener('DOMContentLoaded', function() {
			const cards = document.querySelectorAll('.course-card');
			cards.forEach((card, index) => {
				card.style.animationDelay = (index * 0.1) + 's';
			});

			// Auto-dismiss alerts
			setTimeout(function() {
				const alerts = document.querySelectorAll('.alert');
				alerts.forEach(alert => {
					if (alert.querySelector('.btn-close')) {
						bootstrap.Alert.getOrCreateInstance(alert).close();
					}
				});
			}, 5000);
		});
	</script>
}